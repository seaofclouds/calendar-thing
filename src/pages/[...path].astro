---
import { Calendar } from '../components/Calendar';
import { CalendarImage } from '../components/CalendarImage';
import '../index.css';

// Get path segments and search params
const { path } = Astro.params;
const segments = path?.split('/') || [];
const [year, format] = segments;
const url = new URL(Astro.request.url);
const searchParams = Object.fromEntries(url.searchParams);

// Handle root redirect
if (!year) {
  return Astro.redirect(`/${new Date().getFullYear()}`);
}

// Get orientation and size first to determine other defaults
const orientation = searchParams.orientation || 'portrait';
const size = searchParams.size || 'letter';

// Determine default rows and columns based on orientation and size
const defaultColumns = orientation === 'landscape' ? 4 : 3;
const defaultRows = (() => {
  if (orientation === 'landscape') {
    return 3;
  }
  // For portrait orientation
  if (['letter', 'a4', 'legal', 'tabloid'].includes(size)) {
    return 5;
  }
  return 4;
})();

// Parse params with defaults
const params = {
  size,
  orientation,
  rows: parseInt(searchParams.rows || String(defaultRows)),
  columns: parseInt(searchParams.columns || String(defaultColumns)),
  dpi: parseInt(searchParams.dpi || '300'),
  header: searchParams.header !== 'off',
  testing: searchParams.testing === 'on'
};

// Set title based on route
const title = format 
  ? `Calendar ${year} - ${format.toUpperCase()}`
  : `Calendar ${year}`;

const yearNum = parseInt(year);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
  </head>
  <body>
    <div id="root">
      {format ? (
        <CalendarImage 
          client:only="react"
          format={format as 'png' | 'jpg'}
          year={yearNum}
          {...params}
        />
      ) : (
        <Calendar 
          client:only="react"
          year={yearNum}
          {...params}
        />
      )}
    </div>
  </body>
</html>
